{
  "resource_changes": [
    {
      "address": "module.service_with_name_suffix.aws_cloudwatch_log_group.stderr",
      "module_address": "module.service_with_name_suffix",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "stderr",
      "provider_name": "aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "kms_key_id": null,
          "name": "ci-ecs-frontend-service-test-new-stderr",
          "name_prefix": null,
          "retention_in_days": 7,
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "id": true
        }
      }
    },
    {
      "address": "module.service_with_name_suffix.aws_cloudwatch_log_group.stdout",
      "module_address": "module.service_with_name_suffix",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "stdout",
      "provider_name": "aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "kms_key_id": null,
          "name": "ci-ecs-frontend-service-test-new-stdout",
          "name_prefix": null,
          "retention_in_days": 7,
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "id": true
        }
      }
    },
    {
      "address": "module.service_with_name_suffix.module.listener_rule_home.aws_alb_listener_rule.rule[0]",
      "module_address": "module.service_with_name_suffix.module.listener_rule_home",
      "mode": "managed",
      "type": "aws_alb_listener_rule",
      "name": "rule",
      "index": 0,
      "provider_name": "aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "action": [
            {
              "authenticate_cognito": [],
              "authenticate_oidc": [],
              "fixed_response": [],
              "redirect": [],
              "type": "forward"
            }
          ],
          "condition": [
            {
              "field": "host-header",
              "http_header": [],
              "http_request_method": [],
              "query_string": [],
              "source_ip": [],
              "values": [
                "*.*"
              ]
            },
            {
              "field": "path-pattern",
              "http_header": [],
              "http_request_method": [],
              "query_string": [],
              "source_ip": [],
              "values": [
                "*"
              ]
            }
          ],
          "listener_arn": "arn:aws:elasticloadbalancing:eu-west-1:123456789012:listener/app/frontend-route/ae493096782583e1/01817b5287e35d21",
          "priority": 1
        },
        "after_unknown": {
          "action": [
            {
              "authenticate_cognito": [],
              "authenticate_oidc": [],
              "fixed_response": [],
              "order": true,
              "redirect": [],
              "target_group_arn": true
            }
          ],
          "arn": true,
          "condition": [
            {
              "host_header": true,
              "http_header": [],
              "http_request_method": [],
              "path_pattern": true,
              "query_string": [],
              "source_ip": [],
              "values": [
                false
              ]
            },
            {
              "host_header": true,
              "http_header": [],
              "http_request_method": [],
              "path_pattern": true,
              "query_string": [],
              "source_ip": [],
              "values": [
                false
              ]
            }
          ],
          "id": true
        }
      }
    },
    {
      "address": "module.service_with_name_suffix.module.service.aws_alb_target_group.target_group",
      "module_address": "module.service_with_name_suffix.module.service",
      "mode": "managed",
      "type": "aws_alb_target_group",
      "name": "target_group",
      "provider_name": "aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "deregistration_delay": 10,
          "health_check": [
            {
              "enabled": true,
              "healthy_threshold": 2,
              "interval": 5,
              "matcher": "200-299",
              "path": "/internal/healthcheck",
              "port": "traffic-port",
              "protocol": "HTTP",
              "timeout": 4,
              "unhealthy_threshold": 2
            }
          ],
          "lambda_multi_value_headers_enabled": false,
          "name": "ci-ecs-frontend-service-test-new",
          "name_prefix": null,
          "port": 31337,
          "protocol": "HTTP",
          "proxy_protocol_v2": false,
          "slow_start": 0,
          "tags": null,
          "target_type": "instance",
          "vpc_id": "vpcId"
        },
        "after_unknown": {
          "arn": true,
          "arn_suffix": true,
          "health_check": [
            {}
          ],
          "id": true,
          "stickiness": true
        }
      }
    },
    {
      "address": "module.service_with_name_suffix.module.service.aws_ecs_service.service",
      "module_address": "module.service_with_name_suffix.module.service",
      "mode": "managed",
      "type": "aws_ecs_service",
      "name": "service",
      "provider_name": "aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "capacity_provider_strategy": [],
          "cluster": "default",
          "deployment_controller": [],
          "deployment_maximum_percent": 200,
          "deployment_minimum_healthy_percent": 100,
          "desired_count": 3,
          "enable_ecs_managed_tags": false,
          "health_check_grace_period_seconds": null,
          "load_balancer": [
            {
              "container_name": "ecs-frontend-service-test-new",
              "container_port": 1234,
              "elb_name": ""
            }
          ],
          "name": "ci-ecs-frontend-service-test-new",
          "network_configuration": [],
          "ordered_placement_strategy": [
            {
              "field": "attribute:ecs.availability-zone",
              "type": "spread"
            },
            {
              "field": "instanceId",
              "type": "spread"
            }
          ],
          "placement_constraints": [],
          "propagate_tags": null,
          "scheduling_strategy": "REPLICA",
          "service_registries": [],
          "tags": null
        },
        "after_unknown": {
          "capacity_provider_strategy": [],
          "deployment_controller": [],
          "iam_role": true,
          "id": true,
          "launch_type": true,
          "load_balancer": [
            {
              "target_group_arn": true
            }
          ],
          "network_configuration": [],
          "ordered_placement_strategy": [
            {},
            {}
          ],
          "placement_constraints": [],
          "placement_strategy": true,
          "platform_version": true,
          "service_registries": [],
          "task_definition": true
        }
      }
    },
    {
      "address": "module.service_with_name_suffix.module.service.aws_iam_role.role",
      "module_address": "module.service_with_name_suffix.module.service",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "role",
      "provider_name": "aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": { \"Service\": \"ecs.amazonaws.com\" },\n      \"Effect\": \"Allow\"\n    }\n  ]\n}\n",
          "description": null,
          "force_detach_policies": false,
          "max_session_duration": 3600,
          "name_prefix": "ci-ecs-frontend-service-test-ne",
          "path": "/",
          "permissions_boundary": null,
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "name": true,
          "unique_id": true
        }
      }
    },
    {
      "address": "module.service_with_name_suffix.module.service.aws_iam_role_policy.policy",
      "module_address": "module.service_with_name_suffix.module.service",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "policy",
      "provider_name": "aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "name_prefix": "ci-ecs-frontend-service-test-ne",
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:AuthorizeSecurityGroupIngress\",\n        \"ec2:Describe*\",\n        \"elasticloadbalancing:DeregisterInstancesFromLoadBalancer\",\n        \"elasticloadbalancing:DeregisterTargets\",\n        \"elasticloadbalancing:Describe*\",\n        \"elasticloadbalancing:RegisterInstancesWithLoadBalancer\",\n        \"elasticloadbalancing:RegisterTargets\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\n"
        },
        "after_unknown": {
          "id": true,
          "name": true,
          "role": true
        }
      }
    },
    {
      "address": "module.service_with_name_suffix.module.service.null_resource.alb_arn",
      "module_address": "module.service_with_name_suffix.module.service",
      "mode": "managed",
      "type": "null_resource",
      "name": "alb_arn",
      "provider_name": "null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "triggers": {
            "alb_name": ""
          }
        },
        "after_unknown": {
          "id": true,
          "triggers": {}
        }
      }
    },
    {
      "address": "module.service_with_name_suffix.module.service.null_resource.alb_listener_arn",
      "module_address": "module.service_with_name_suffix.module.service",
      "mode": "managed",
      "type": "null_resource",
      "name": "alb_listener_arn",
      "provider_name": "null",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "triggers": {
            "alb_listener_arn": ""
          }
        },
        "after_unknown": {
          "id": true,
          "triggers": {}
        }
      }
    },
    {
      "address": "module.service_with_name_suffix.module.taskdef.aws_ecs_task_definition.taskdef",
      "module_address": "module.service_with_name_suffix.module.taskdef",
      "mode": "managed",
      "type": "aws_ecs_task_definition",
      "name": "taskdef",
      "provider_name": "aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "container_definitions": "[{\"command\":null,\"cpu\":256,\"dockerLabels\":{\"component\":\"ecs-frontend-service-test\",\"env\":\"ci\",\"team\":\"super-team\",\"version\":\"1\"},\"environment\":[{\"name\":\"COMPONENT_NAME\",\"value\":\"ecs-frontend-service-test\"},{\"name\":\"ENV_NAME\",\"value\":\"ci\"},{\"name\":\"LOGSPOUT_CLOUDWATCHLOGS_LOG_GROUP_STDERR\",\"value\":\"ci-ecs-frontend-service-test-new-stderr\"},{\"name\":\"LOGSPOUT_CLOUDWATCHLOGS_LOG_GROUP_STDOUT\",\"value\":\"ci-ecs-frontend-service-test-new-stdout\"},{\"name\":\"STATSD_ENABLED\",\"value\":\"true\"},{\"name\":\"STATSD_HOST\",\"value\":\"172.17.42.1\"},{\"name\":\"STATSD_PORT\",\"value\":\"8125\"},{\"name\":\"VERSION\",\"value\":\"1\"}],\"essential\":true,\"image\":\"imageId\",\"linuxParameters\":{\"initProcessEnabled\":true},\"memory\":512,\"mountPoints\":[],\"name\":\"ecs-frontend-service-test-new\",\"portMappings\":[{\"containerPort\":1234}],\"ulimits\":[{\"hardLimit\":65535,\"name\":\"nofile\",\"softLimit\":4096}]}]",
          "cpu": null,
          "execution_role_arn": "",
          "family": "ci-ecs-frontend-service-test-new",
          "ipc_mode": null,
          "memory": null,
          "pid_mode": null,
          "placement_constraints": [],
          "proxy_configuration": [],
          "requires_compatibilities": null,
          "tags": null,
          "task_role_arn": "",
          "volume": [
            {
              "docker_volume_configuration": [],
              "host_path": "/tmp/dummy_volume",
              "name": "dummy"
            }
          ]
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "network_mode": true,
          "placement_constraints": [],
          "proxy_configuration": [],
          "revision": true,
          "volume": [
            {
              "docker_volume_configuration": []
            }
          ]
        }
      }
    }
  ]
}